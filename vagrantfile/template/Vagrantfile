# -*- mode: ruby -*-
# vi: set ft=ruby :

current_dir = File.basename(Dir.getwd)

Vagrant.configure(2) do |config|

    config.vm.box = "ubuntu/bionic64"

    ## Config Plugins
    {{ if eq update_guestools "Y" }}
    # disable auto update guestools in case plugin is installed
    config.vbguest.auto_update = true
    {{else}}
    # disable auto update guestools in case plugin is installed
    # remove if plugin is not installed
    config.vbguest.auto_update = false
    {{ end }}

    {{ if eq cachier_plugin "Y" }}
    # Plugin vagrant-cachier
    # is unstable on Windows -> Problem unlinking file after apt install
    # enable for testing only
    # required plugins:
    # http://fgrehm.viewdocs.io/vagrant-cachier/usage
    required_plugins = %w(
    vagrant-cachier
    )
    # autoinstall plugins to host
    required_plugins.each do |plugin|
        unless Vagrant.has_plugin? plugin
            system "vagrant plugin install #{plugin}"
        end
    end
    if Vagrant.has_plugin?("vagrant-cachier")
        config.cache.scope = :box
        # config caching of apt files across all boxes
        config.cache.enable :apt
        # fix permission issue
        # https://github.com/fgrehm/vagrant-cachier/issues/185
        config.cache.synced_folder_opts = {
            owner: "_apt",
            mount_options: ["dmode=777", "fmode=666"],
        }
    end
    {{ end }}

    # UNCOMMENT to use!
    # Customize script before usage
    # config.vm.provision :shell, path: "internal/bootstrap.sh"
    config.vm.synced_folder ".", "/vagrant"

    {{ if eq show_vagrantUPmessage "Y" }}
    # Show message after 'vagrant up'
    config.vm.post_up_message = <<-EOF
    #######      Your VM        is ready      #######

    EOF
    {{ end }}

    # Uncomment for portforwarding
    # config.vm.network "forwarded_port", guest: 80, host: 8080

    # Uncomment for static IP
    # config.vm.network "private_network", ip: "192.168.50.4"
    config.vm.hostname
    config.vm.provider "virtualbox" do |vb|
        vb.memory = 2 * 1024
        vb.cpus = 2
        vb.name = current_dir

        # performance tweak
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
        vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 10000 ]
    end

    {{ if eq puppetapply "Y" }}
    config.vm.provision "puppet" do |puppet|
        puppet.manifests_path = "puppet/manifests"
        puppet.manifest_file = "default.pp"
        puppet.module_path = "puppet/modules"
        puppet.options = "--verbose --debug"
    end
    {{ end }}

    # Run at 'vagrant destroy' on VM
    # UNCOMMENT to use
    #config.trigger.before :destroy do |trigger|
    #  trigger.run_remote = {path:  "internal/destroy.sh"}
    #end

    # Run at 'vagrant destroy' on Windows Host
    # UNCOMMENT to use
    #config.trigger.after :destroy do |trigger|
    #  trigger.run = {path: "internal/destroy.bat"}
    #end

end